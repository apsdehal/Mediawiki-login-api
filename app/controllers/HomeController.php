<?php

 class HomeController{

 	/**
 	 * @var $mwConfig A variable for holding an instance of MWOAuthClientCOnfig
 	 * @var $cmrToken Token received generated by passing secret and consume_token to
 	 * 					to OAuthClient class
 	 * @var $client Instance of MWOAuthClass that is generated after passing both above vars into it
 	 * 				Used to interact with Wikimedia's OAuth API 	
 	 */	
 	private $mwClient;
 	private $tool;

  	public function __construct(){
 		$this->tool = 'wikidata-annotation-tool';
 	}
	
 	/**
 	 * Function to handle the get request made to the server where this app reside
 	 * Since the App is built in a RESTful manner thats why this function is here
 	 * Initiaites the client and makes the redirect to and fro the wikimedia OAuth clientS
 	 * Also return the user info, <= todo after testing
 	 */	
 	public function get(){

 		$this->mwClient = new MW_OAuth(	'Wikidata-Annotation', 'wikidata', 'www' );

 		switch ( isset( $_GET['action'] ) ? $_GET['action'] : '' ) {
			case 'download':
				header( 'Content-Type: text/plain' );
				readfile( __FILE__ );
				return;

			case 'authorize':
				$this->mwClient->doAuthorizationRedirect();
				return;
			case 'check_claim':
				$params = $this->analyzeGetRequests();
				echo json_encode($this->mwClient->doesClaimExist($params));
			case 'checkOAuth':
				echo json_encode($this-<mwClient->isAuthOk())		
		}

 	}

 	public function analyzeGetRequests(){
 		if(isset($_GET['action'])){
 			unset($_GET['action']);
 		}
 		return $_GET;
 	}
 
 }